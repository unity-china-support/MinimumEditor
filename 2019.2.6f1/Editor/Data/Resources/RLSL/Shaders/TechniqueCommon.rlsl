/*
    The contents of this file are provided under the terms described in the accompanying License.txt file. Use of this file in any way acknowledges acceptance of these terms.
    Copyright(c) 2010 - 2017, Imagination Technologies Limited and / or its affiliated group companies. All rights reserved.
*/

uniformblock TechniqueProperties
{
    int GridSize;
    int RaysPerPixel;
    int GridDim;
};

void CreateOrthoNormalBasis(vec3 n, out vec3 tangent, out vec3 bitangent)
{
    float sign = n.z >= 0.0 ? 1.0 : -1.0;
    float a    = -1.0 / (sign + n.z);
    float b    = n.x * n.y * a;

    tangent    = vec3(1.0 + sign * n.x * n.x * a, sign * b, -sign * n.x);
    bitangent  = vec3(b, sign + n.y * n.y * a, -n.y);
}

void pixarONB(vec3 n, inout vec3 tangent, inout vec3 bitangent)
{
    float sign = n.z >= 0.0 ? 1.0 : -1.0;
    float a = -1.0 / (sign + n.z);
    float b = n.x * n.y * a;

    tangent = vec3(1.0 + sign * n.x * n.x * a, sign * b, -sign * n.x);
    bitangent = vec3(b, sign + n.y * n.y * a, -n.y);
}
